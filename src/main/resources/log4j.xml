<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
	<!-- 
		log4j
		프로그램 작동 시 로그를 남기기 위한 자바기반 오픈소스 로깅 라이브러리
		로그에 레벨을 지정해서 지정한 레벨이상의 로그정보만 기록하는 방식.
		System.out.println? 속도나 성능면에서 훨씬 최적화 되어있음.
	 -->
	 <!-- 
	 	ConsoleAppender : 콘솔창에 메세지를 출력 해 주는 클래스
	 	FileAppender : 파일에 메세지를 출력하는 클래스
	 	
	 	로그레벨설정
	 	FATAL > ERROR > WARN > INFO > DEBUGER > TRACE
	 	FATAL : 애플리케이션이 동작이 불가능할 정도의 에러 발생 시 로그를 찍어줌.
	 	ERROR : 요청처리 중 에러발생 시 로그를 찍어줌.
	 	WARN : 심각한 문제는 아니지만 추후 에러발생 가능성을 알려주는 로그
	 	INFO : 일반 정보성 메세지를 나타냄.
	 	DEBUGER : 개발 시 디버그 용도로 로그를 찍어줌.
	 	TRACE : 1.2 이상 버전에서 추가됨. DEBUGGER보다 좀 더 상세하게 표현해준다.
	 	
	 	개발할 때는 DEBUGER 로 작업을 하면서 테스트 해보다가
	 	운영환경으로 넘어가면 INFO모드로 필요한 정보성 메세지만 출력해 주게끔 변경 해 줘야함.
	  -->
	  
	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
		
			<param name="ConversionPattern" value="[%d{HH:mm:ss.SSS}] %-5p %c{1}.%M(%F:%L) - %m%n" />
			<!-- 
				%p : 우선순위 레벨
				%c : 호출 할 클래스명
				%m : 실행된 메소드
				%F : 로그발생한 파일명
			 -->
			 
		</layout>
	</appender>
	
	<!-- SQL 로그 출력용 패턴 지정 -->
	<appender name="sql-console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out"/>
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%m%n"/>
		</layout>
	</appender>
	
	<!-- Application Loggers -->
	<logger name="com.kh.spring">
		<level value="info" />
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>
	
	<!-- SQL 로그 출력 -->
	<logger name="java.sql.Connection">
		<level value="debug"/>
		<appender-ref ref="sql-console"/>
	</logger>
	
	<logger name="java.sql.Statement">
		<level value="debug"/>
		<appender-ref ref="sql-console"/>
	</logger>
	
	<logger name="java.sql.PreparedStatement">
		<level value="debug"/>
		<appender-ref ref="sql-console"/>
	</logger>
	
	<logger name="java.sql.ResultSet">
		<level value="debug"/>
		<appender-ref ref="sql-console"/>
	</logger>
	
	<logger name="jdbc.sqlonly" additivity="false">
		<level value="INFO"/>
		<appender-ref ref="sql-console"/>
	</logger>
	
	<logger name="jdbc.resultsettable" additivity="false">
		<level value="INFO"/>
		<appender-ref ref="sql-console"/>
	</logger>


	<!-- Root Logger -->
	<root>
		<priority value="warn" />
		<appender-ref ref="console" />
	</root>
	
</log4j:configuration>
